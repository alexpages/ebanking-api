version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "32181:32181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:32181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-create-topics:
    image: confluentinc/cp-enterprise-kafka:7.4.0
    depends_on:
      - kafka
    hostname: kafka-create-topics
    command: ["bash", "./create-topics.sh"]
    working_dir: /scripts
    volumes:
      - ./scripts:/scripts
  db:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD:
      POSTGRES_DB: jwtsecurity

#  expose: 8080
#  app:
#    ports:
#      - "8080:8080"
#    depends_on:
#      - db
#      - kafka
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/jwtsecurity
#      SPRING_DATASOURCE_USERNAME:
#      SPRING_DATASOURCE_PASSWORD:
#      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
#      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
#      SPRING_JPA_SHOW_SQL: "true"
#      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
#      SPRING_JPA_DATABASE: postgresql
#      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092


      #  web:
      #    container_name: spring-app
      #    image: spring-app
      #    depends_on:
      #      - db
      #    environment:
      #      SPRING_DATA_POSTGRESQL_URI: jdbc:postgresql://db:5432/jwtsecurity
      #      SPRING_DATA_POSTGRESQL_HOST: db
      #    ports:
      #      - 8080:8080